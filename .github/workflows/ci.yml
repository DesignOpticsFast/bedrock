name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  build:                       # keep this id so the check stays "CI / build"
    name: Ubuntu build (with OpenCascade)
    runs-on: [self-hosted, linux, x64, dev01, fastpath]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Install deps (toolchain + TBB + ccache)
        run: |
          sudo dnf update -y
          sudo dnf install -y cmake ninja-build gcc gcc-c++ make tbb-devel
          # ccache is already installed from our manual setup
          echo "Basic toolchain installed, will handle OCCT separately"

      - name: Setup ccache dirs
        run: |
          mkdir -p /var/cache/ccache
          echo "CCACHE_DIR=/var/cache/ccache" >> $GITHUB_ENV
          echo "CCACHE_BASEDIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          sudo chown -R github-runner:github-runner /var/cache/ccache

      - name: Configure (CMake - without OCCT for now)
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DBUILD_WITH_OCCT=OFF

      - name: Print tool versions
        run: |
          echo "=== Tool Versions ==="
          gcc --version
          cmake --version
          ninja --version
          ccache --version
          echo "===================="

      - name: Build libraries only
        run: |
          ccache -z
          cmake --build build --config Release --target bedrock_engine bedrock_geom -j
          ccache -s

      - name: Upload CMake logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cmake-logs
          path: |
            build/CMakeFiles/CMakeOutput.log
            build/CMakeFiles/CMakeError.log
          retention-days: 7

      - name: Upload ccache stats
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ccache-stats
          path: /var/cache/ccache
          retention-days: 7

      - name: Post-job cleanup
        if: always()
        run: |
          rm -rf "$HOME/_work" || true
          ccache --cleanup || true
